/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IUniswapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router01__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "IYVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IYVault__factory>;
    getContractFactory(
      name: "IAddressProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAddressProvider__factory>;
    getContractFactory(
      name: "IAddressProviderEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAddressProviderEvents__factory>;
    getContractFactory(
      name: "ICreditAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditAccount__factory>;
    getContractFactory(
      name: "ICreditFacade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditFacade__factory>;
    getContractFactory(
      name: "ICreditFacadeEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditFacadeEvents__factory>;
    getContractFactory(
      name: "ICreditFacadeExceptions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditFacadeExceptions__factory>;
    getContractFactory(
      name: "ICreditManagerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditManagerV2__factory>;
    getContractFactory(
      name: "ICreditManagerV2Events",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditManagerV2Events__factory>;
    getContractFactory(
      name: "ICreditManagerV2Exceptions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditManagerV2Exceptions__factory>;
    getContractFactory(
      name: "IDataCompressor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDataCompressor__factory>;
    getContractFactory(
      name: "IDataCompressorExceptions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDataCompressorExceptions__factory>;
    getContractFactory(
      name: "IPriceOracleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracleV2__factory>;
    getContractFactory(
      name: "IPriceOracleV2Events",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracleV2Events__factory>;
    getContractFactory(
      name: "IPriceOracleV2Exceptions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracleV2Exceptions__factory>;
    getContractFactory(
      name: "IPriceOracleV2Ext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracleV2Ext__factory>;
    getContractFactory(
      name: "IVersion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVersion__factory>;
    getContractFactory(
      name: "IWETHGateway",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETHGateway__factory>;
    getContractFactory(
      name: "Terminator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Terminator__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IUniswapV2Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router01>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "IYVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IYVault>;
    getContractAt(
      name: "IAddressProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAddressProvider>;
    getContractAt(
      name: "IAddressProviderEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAddressProviderEvents>;
    getContractAt(
      name: "ICreditAccount",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditAccount>;
    getContractAt(
      name: "ICreditFacade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditFacade>;
    getContractAt(
      name: "ICreditFacadeEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditFacadeEvents>;
    getContractAt(
      name: "ICreditFacadeExceptions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditFacadeExceptions>;
    getContractAt(
      name: "ICreditManagerV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditManagerV2>;
    getContractAt(
      name: "ICreditManagerV2Events",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditManagerV2Events>;
    getContractAt(
      name: "ICreditManagerV2Exceptions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditManagerV2Exceptions>;
    getContractAt(
      name: "IDataCompressor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDataCompressor>;
    getContractAt(
      name: "IDataCompressorExceptions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDataCompressorExceptions>;
    getContractAt(
      name: "IPriceOracleV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracleV2>;
    getContractAt(
      name: "IPriceOracleV2Events",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracleV2Events>;
    getContractAt(
      name: "IPriceOracleV2Exceptions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracleV2Exceptions>;
    getContractAt(
      name: "IPriceOracleV2Ext",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracleV2Ext>;
    getContractAt(
      name: "IVersion",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVersion>;
    getContractAt(
      name: "IWETHGateway",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETHGateway>;
    getContractAt(
      name: "Terminator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Terminator>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
